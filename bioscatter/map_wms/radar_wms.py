#!/usr/bin/env python




##################################################
## DEPENDENCIES
import sys
import os
import os.path
try:
    import builtins as builtin
except ImportError:
    import __builtin__ as builtin
from os.path import getmtime, exists
import time
import types
from Cheetah.Version import MinCompatibleVersion as RequiredCheetahVersion
from Cheetah.Version import MinCompatibleVersionTuple as RequiredCheetahVersionTuple
from Cheetah.Template import Template
from Cheetah.DummyTransaction import *
from Cheetah.NameMapper import NotFound, valueForName, valueFromSearchList, valueFromFrameOrSearchList
from Cheetah.CacheRegion import CacheRegion
import Cheetah.Filters as Filters
import Cheetah.ErrorCatchers as ErrorCatchers

##################################################
## MODULE CONSTANTS
VFFSL=valueFromFrameOrSearchList
VFSL=valueFromSearchList
VFN=valueForName
currentTime=time.time
__CHEETAH_version__ = '2.4.4'
__CHEETAH_versionTuple__ = (2, 4, 4, 'development', 0)
__CHEETAH_genTime__ = 1313007203.960633
__CHEETAH_genTimestamp__ = 'Wed Aug 10 15:13:23 2011'
__CHEETAH_src__ = 'radar_wms.tmpl'
__CHEETAH_srcLastModified__ = 'Wed Aug 10 15:13:14 2011'
__CHEETAH_docstring__ = 'Autogenerated by Cheetah: The Python-Powered Template Engine'

if __CHEETAH_versionTuple__ < RequiredCheetahVersionTuple:
    raise AssertionError(
      'This template was compiled with Cheetah version'
      ' %s. Templates compiled before version %s must be recompiled.'%(
         __CHEETAH_version__, RequiredCheetahVersion))

##################################################
## CLASSES

class radar_wms(Template):

    ##################################################
    ## CHEETAH GENERATED METHODS


    def __init__(self, *args, **KWs):

        super(radar_wms, self).__init__(*args, **KWs)
        if not self._CHEETAH__instanceInitialized:
            cheetahKWArgs = {}
            allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
            for k,v in KWs.items():
                if k in allowedKWs: cheetahKWArgs[k] = v
            self._initCheetahInstance(**cheetahKWArgs)
        

    def respond(self, trans=None):



        ## CHEETAH: main method generated for this template
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        write(u'''#  Tile Index
MAP
 CONFIG "MS_ERRORFILE" "/scratch/www/map/log/radar_wms.map"  
  DEBUG 5
NAME "UNQC_CREF"
   SIZE 7001 3501
   DEBUG 3
   WEB
     IMAGEURL \'/jduck/maps/\'
     LOG \'/scratch/www/map/log/weblog\'
     IMAGEPATH \'/scratch/www/html/jduck/maps/\'
     METADATA
       "wms_title" "UNQC_CREF"
       "wms_srs" "EPSG:4326"
       "wms_extent" "-131.755250 17.934651 -58.244750 57.065349"
       "wms_onlineresource" "http://fire.rccc.ou.edu/cgi-bin/mapserv?map=/scratch/www/map/radar_wms''')
        _v = VFFSL(SL,"date_short_str",True) # u'${date_short_str}' on line 16, col 100
        if _v is not None: write(_filter(_v, rawExpr=u'${date_short_str}')) # from line 16, col 100.
        write(u'''.map&"
     END
    
   END
    EXTENT -131.755250 17.934651 -58.244750 57.065349
    #EXTENT 18 -132 57 -58

   PROJECTION 
     "init=epsg:4326"
   END 


LAYER
 STATUS ON
 NAME "time_idx"
 TYPE POLYGON
 DATA "wkb_geometry from unqc_cref_view_''')
        _v = VFFSL(SL,"date_short_str",True) # u'${date_short_str}' on line 32, col 41
        if _v is not None: write(_filter(_v, rawExpr=u'${date_short_str}')) # from line 32, col 41.
        write(u''' using unique ogc_fid"
 FILTER "year = extract(year from [datetime])"
 METADATA
   "wms_title" "TIME INDEX"
   "wms_srs"   "EPSG:4326"
   "wms_extent" "-131.755250 17.934651 -58.244750 57.065349"
   "wms_timeextent" "''')
        _v = VFFSL(SL,"date_short",True) # u'${date_short}' on line 38, col 22
        if _v is not None: write(_filter(_v, rawExpr=u'${date_short}')) # from line 38, col 22.
        write(u'''/''')
        _v = VFFSL(SL,"date_end",True) # u'${date_end}' on line 38, col 36
        if _v is not None: write(_filter(_v, rawExpr=u'${date_end}')) # from line 38, col 36.
        write(u'''/PT5M"
   "wms_timeitem" "datetime" #column in postgis table of type timestamp
   "wms_timedefault" "''')
        _v = VFFSL(SL,"date_iso",True) # u'${date_iso}' on line 40, col 23
        if _v is not None: write(_filter(_v, rawExpr=u'${date_iso}')) # from line 40, col 23.
        write(u'''Z"
 END
 CONNECTION "dbname=cybercom host=fire.rccc.ou.edu"
 CONNECTIONTYPE postgis
END

# raster layer
LAYER
 NAME "nexrad-unqc_cref"
 TYPE RASTER
 STATUS ON
 DEBUG ON
 DUMP TRUE
 PROJECTION 
   "init=epsg:4326"
 END
 #EXTENT 18 -132 57 -58 
 METADATA
   "wms_title" "NEXRAD COMPOSITE REFLECTIVITY WMS-T"
   "wms_srs"   "EPSG:4326"
   "wms_extent" "-131 17 -58.244750 57.065349"
   "wms_timeextent" "''')
        _v = VFFSL(SL,"date_short",True) # u'${date_short}' on line 61, col 22
        if _v is not None: write(_filter(_v, rawExpr=u'${date_short}')) # from line 61, col 22.
        write(u'''/''')
        _v = VFFSL(SL,"date_end",True) # u'${date_end}' on line 61, col 36
        if _v is not None: write(_filter(_v, rawExpr=u'${date_end}')) # from line 61, col 36.
        write(u'''/PT5M" 
   "wms_timeitem" "datetime" #datetime is a column in postgis table of type timestamp
   "wms_timedefault" "''')
        _v = VFFSL(SL,"date_iso",True) # u'${date_iso}' on line 63, col 23
        if _v is not None: write(_filter(_v, rawExpr=u'${date_iso}')) # from line 63, col 23.
        write(u'''Z"
   "ows_enable_request" "*"
 END
    PROCESSING "SCALE=-30,75"
    PROCESSING "SCALE_BUCKETS=22"
    CLASS
        NAME "-30"
        EXPRESSION ([pixel] < -30)
        STYLE
            COLOR 204 255 255
        END
    END
    CLASS
        NAME "-25"
        EXPRESSION ([pixel] < -25)
        STYLE
            COLOR 206 154 206
        END
    END
    CLASS
        NAME "-20"
        EXPRESSION ([pixel] < -20)
        STYLE
            COLOR 153 102 153
        END
    END
    CLASS
        NAME "-15"
        EXPRESSION ([pixel] < -15)
        STYLE
            COLOR 102 51 102
        END
    END
    CLASS
        NAME "-10"
        EXPRESSION ([pixel] < -10)
        STYLE
            COLOR 206 206 154
        END
    END
    CLASS
        NAME "-5"
        EXPRESSION ([pixel] < -5)
        STYLE
            COLOR 154 154 103
        END
    END
    CLASS
        NAME "0"
        EXPRESSION ([pixel] < 0)
        STYLE
            COLOR 100 100 100
        END
    END
    CLASS
        NAME "5"
        EXPRESSION ([pixel] < 5)
        STYLE
            COLOR 4 233 231
        END
    END
    CLASS
        NAME "10"
        EXPRESSION ([pixel] < 10)
        STYLE
            COLOR 1 161 246
        END
    END
    CLASS
        NAME "15"
        EXPRESSION ([pixel] < 15)
        STYLE
            COLOR 3 0 244
        END
    END
    CLASS
        NAME "20"
        EXPRESSION ([pixel] < 20)
        STYLE 
            COLOR 2 252 2
        END
    END
    CLASS
        NAME "25"
        EXPRESSION ([pixel] < 25)
        STYLE
            COLOR 1 199 1
        END
    END
    CLASS
        NAME "30"
        EXPRESSION ([pixel] < 30)
        STYLE
            COLOR 0 142 0
        END
    END
    CLASS
        NAME "35"
        EXPRESSION ([pixel] < 35)
        STYLE
            COLOR 253 248 2
        END
    END
    CLASS
        NAME "40"
        EXPRESSION ([pixel] < 40)
        STYLE
            COLOR 229 188 0
        END
    END
    CLASS
        NAME "45"
        EXPRESSION ([pixel] < 45)
        STYLE
            COLOR 253 149 0
        END
    END
    CLASS
        NAME "50"
        EXPRESSION ([pixel] < 50)
        STYLE 
            COLOR 253 149 0
        END
    END
    CLASS
        NAME "55"
        EXPRESSION ([pixel] < 55)
        STYLE
            COLOR 214 0 0 
        END
    END
    CLASS 
        NAME "60"
        EXPRESSION ([pixel] < 60)
        STYLE
            COLOR 188 0 0 
        END
    END
    CLASS
        NAME "65"
        EXPRESSION ([pixel] < 65)
        STYLE
            COLOR 248 0 253
        END
    END
    CLASS
        NAME "70"
        EXPRESSION ([pixel] < 70)
        STYLE
            COLOR 153 85 200
        END
    END
    CLASS
        NAME "75"
        EXPRESSION ([pixel] < 75)
        STYLE
            COLOR 253 253 253
        END
    END
 OFFSITE 0 0 0
 TILEITEM "file_location" #filepath is a column in postgis table with varchar of the filepath to each image
 TILEINDEX "time_idx"
END

END
''')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        
    ##################################################
    ## CHEETAH GENERATED ATTRIBUTES


    _CHEETAH__instanceInitialized = False

    _CHEETAH_version = __CHEETAH_version__

    _CHEETAH_versionTuple = __CHEETAH_versionTuple__

    _CHEETAH_genTime = __CHEETAH_genTime__

    _CHEETAH_genTimestamp = __CHEETAH_genTimestamp__

    _CHEETAH_src = __CHEETAH_src__

    _CHEETAH_srcLastModified = __CHEETAH_srcLastModified__

    _mainCheetahMethod_for_radar_wms= 'respond'

## END CLASS DEFINITION

if not hasattr(radar_wms, '_initCheetahAttributes'):
    templateAPIClass = getattr(radar_wms, '_CHEETAH_templateClass', Template)
    templateAPIClass._addCheetahPlumbingCodeToClass(radar_wms)


# CHEETAH was developed by Tavis Rudd and Mike Orr
# with code, advice and input from many other volunteers.
# For more information visit http://www.CheetahTemplate.org/

##################################################
## if run from command line:
if __name__ == '__main__':
    from Cheetah.TemplateCmdLineIface import CmdLineIface
    CmdLineIface(templateObj=radar_wms()).run()


